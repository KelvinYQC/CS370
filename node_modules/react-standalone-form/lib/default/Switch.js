"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.switchTheme = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactJss = _interopRequireDefault(require("react-jss"));

var _classnames = _interopRequireDefault(require("classnames"));

var _polished = require("polished");

var _ = require("../.");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Switch = function Switch(_ref) {
  var name = _ref.name,
      value = _ref.value,
      text = _ref.text,
      required = _ref.required,
      setValue = _ref.setValue,
      classes = _ref.classes;
  return /*#__PURE__*/_react.default.createElement("label", {
    className: (0, _classnames.default)(classes.label, 'form-checkitem'),
    htmlFor: name
  }, /*#__PURE__*/_react.default.createElement("input", {
    type: "checkbox",
    name: name,
    className: classes.input,
    id: name,
    checked: value,
    onChange: function onChange(e) {
      return setValue(name, e.target.checked, required);
    }
  }), " ", text);
};

Switch.propTypes = {
  name: _propTypes.default.string.isRequired,
  value: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  text: _propTypes.default.node,
  required: _propTypes.default.bool,
  setValue: _propTypes.default.func.isRequired
};

var switchTheme = function switchTheme(theme) {
  return {
    label: {
      display: 'flex',
      position: 'relative',
      textAlign: 'left',
      alignItems: 'flex-start',
      cursor: 'pointer'
    },
    input: {
      position: 'relative',
      minWidth: theme.sizes.inputHeight * 7 / 8,
      height: theme.sizes.inputHeight / 2,
      display: 'inline-block',
      backgroundColor: theme.colors.inputBg,
      marginRight: 10,
      padding: 0,
      borderRadius: theme.sizes.inputHeight / 4,
      '-webkit-appearance': 'none',
      border: "1px solid ".concat((0, _polished.darken)(0.2, theme.colors.inputBorder)),
      outline: 0,
      verticalAlign: 'middle',
      transform: 'translateY(0.3em)',
      cursor: 'pointer',
      transition: 'background-color 100ms ease-in',
      '&::after': {
        content: '""',
        display: 'block',
        width: theme.sizes.inputHeight / 2 + 2,
        height: theme.sizes.inputHeight / 2 + 2,
        position: 'absolute',
        left: -1,
        top: -2,
        backgroundColor: theme.colors.inputBorder,
        border: "1px solid ".concat((0, _polished.darken)(0.2, theme.colors.inputBorder)),
        borderRadius: '50%',
        boxSizing: 'border-box',
        transition: 'left 200ms ease-in'
      },
      '&:checked': {
        backgroundColor: theme.colors.success,
        '&::after': {
          left: 'calc(100% - 19px)'
        }
      }
    }
  };
};

exports.switchTheme = switchTheme;

var _default = (0, _.withFormControl)((0, _reactJss.default)(switchTheme)(Switch));

exports.default = _default;