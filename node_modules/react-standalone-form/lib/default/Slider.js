"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactJss = _interopRequireDefault(require("react-jss"));

var _ = require("../.");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Slider = function Slider(_ref) {
  var name = _ref.name,
      value = _ref.value,
      required = _ref.required,
      setValue = _ref.setValue,
      min = _ref.min,
      max = _ref.max,
      step = _ref.step,
      unit = _ref.unit,
      classes = _ref.classes;
  return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("input", {
    className: classes.input,
    type: "range",
    name: name,
    value: value || 0,
    min: min,
    max: max,
    onChange: function onChange(e) {
      return setValue(name, Math.floor(e.target.value / step) * step, required);
    }
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.value
  }, value || '0', unit && " ".concat(unit)));
};

Slider.defaultProps = {
  max: 300,
  step: 1
};
Slider.propTypes = {
  name: _propTypes.default.string.isRequired,
  value: _propTypes.default.any,
  required: _propTypes.default.bool,
  setValue: _propTypes.default.func.isRequired,
  min: _propTypes.default.number,
  max: _propTypes.default.number,
  step: _propTypes.default.number,
  unit: _propTypes.default.string
};

var _default = (0, _.withFormControl)((0, _reactJss.default)(function (theme) {
  return {
    input: {
      padding: 0,
      '-webkit-appearance': 'none',
      display: 'flex',
      width: '100%',
      cursor: 'pointer',
      height: theme.sizes.inputHeight,
      marginBottom: -5,
      backgroundColor: 'transparent',
      '&:focus': {
        outline: 'none'
      },
      '&::-webkit-slider-runnable-track': {
        backgroundColor: theme.colors.inputBorder,
        boxShadow: '0 0 60px 15px white',
        height: 6
      },
      '&::-webkit-slider-thumb': {
        width: 12,
        height: 12,
        borderRadius: 6,
        marginTop: -3,
        backgroundColor: theme.colors.accent,
        border: 'none',
        '-webkit-appearance': 'none'
      }
    },
    value: {
      color: theme.colors.inputText,
      fontSize: 13,
      textAlign: 'right',
      whiteSpace: 'nowrap',
      position: 'absolute',
      top: -3,
      right: 0
    }
  };
})(Slider));

exports.default = _default;