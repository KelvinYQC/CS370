"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactJss = _interopRequireDefault(require("react-jss"));

var _classnames = _interopRequireDefault(require("classnames"));

var _polished = require("polished");

var _ = require("../.");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ImageSelect = function ImageSelect(_ref) {
  var name = _ref.name,
      value = _ref.value,
      required = _ref.required,
      setValue = _ref.setValue,
      options = _ref.options,
      multiple = _ref.multiple,
      classes = _ref.classes;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.ImageSelect
  }, options.map(function (option, index) {
    var checked = value && multiple ? value.includes(option.value) : value === option.value;
    return /*#__PURE__*/_react.default.createElement("div", {
      key: index,
      className: (0, _classnames.default)(classes.input, 'form-checkitem', _defineProperty({}, classes.isChecked, checked)),
      onClick: function onClick() {
        var finalValue = multiple ? (0, _.checkboxHandler)(!checked, option.value, value) : option.value;
        setValue(name, finalValue, required);
      }
    }, /*#__PURE__*/_react.default.createElement("img", {
      src: option.image,
      alt: ""
    }), option.label && /*#__PURE__*/_react.default.createElement("span", {
      className: classes.label
    }, option.label));
  }));
};

ImageSelect.propTypes = {
  name: _propTypes.default.string.isRequired,
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),
  required: _propTypes.default.bool,
  setValue: _propTypes.default.func.isRequired,
  options: _propTypes.default.arrayOf(_propTypes.default.shape({
    image: _propTypes.default.string,
    label: _propTypes.default.string,
    value: _propTypes.default.string
  })),
  multiple: _propTypes.default.bool
};

var _default = (0, _.withFormControl)((0, _reactJss.default)(function (theme) {
  return {
    ImageSelect: {
      display: 'flex',
      alignItems: 'center'
    },
    input: {
      flex: '65px 0 0',
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'space-between',
      fontSize: 9,
      lineHeight: 'normal',
      marginTop: 5,
      marginBottom: 10,
      padding: '0 1px',
      color: theme.colors.inputText,
      cursor: 'pointer',
      position: 'relative',
      zIndex: 1
    },
    label: {
      marginTop: 12
    },
    isChecked: {
      '&:before': {
        content: '""',
        position: 'absolute',
        top: -5,
        right: 1,
        bottom: -5,
        left: 1,
        backgroundColor: (0, _polished.lighten)(0.6, theme.colors.accent),
        border: "1px solid ".concat(theme.colors.accent),
        borderRadius: theme.sizes.borderRadius,
        zIndex: -1
      }
    }
  };
})(ImageSelect));

exports.default = _default;