"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.checkboxTheme = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactJss = _interopRequireDefault(require("react-jss"));

var _classnames = _interopRequireDefault(require("classnames"));

var _ = require("../.");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Checkbox = function Checkbox(_ref) {
  var name = _ref.name,
      value = _ref.value,
      text = _ref.text,
      required = _ref.required,
      setValue = _ref.setValue,
      small = _ref.small,
      classes = _ref.classes;
  return /*#__PURE__*/_react.default.createElement("label", {
    className: (0, _classnames.default)(classes.label, 'form-checkitem', _defineProperty({}, classes.small, small)),
    htmlFor: name
  }, /*#__PURE__*/_react.default.createElement("input", {
    type: "checkbox",
    name: name,
    className: classes.input,
    id: name,
    checked: value,
    onChange: function onChange(e) {
      return setValue(name, e.target.checked, required);
    }
  }), " ", text);
};

Checkbox.propTypes = {
  name: _propTypes.default.string.isRequired,
  value: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  required: _propTypes.default.bool,
  text: _propTypes.default.node,
  small: _propTypes.default.bool,
  setValue: _propTypes.default.func.isRequired
};

var checkboxTheme = function checkboxTheme(theme) {
  return {
    label: {
      display: 'block',
      position: 'relative',
      textAlign: 'left',
      cursor: 'pointer'
    },
    input: {
      margin: '0 10px 0 0',
      position: 'relative',
      outline: 'none',
      transform: 'translateY(-5px)',
      minWidth: 18,
      '&::before': {
        content: '""',
        display: 'block',
        position: 'absolute',
        width: 14,
        height: 14,
        verticalAlign: 'baseline',
        top: 0,
        left: 0,
        backgroundColor: theme.colors.inputBg !== 'transparent' ? theme.colors.inputBg : 'white',
        cursor: 'pointer',
        border: "2px solid ".concat(theme.colors.inputBorder),
        borderRadius: 2
      },
      '&:checked': {
        '&::before': {
          backgroundColor: theme.colors.accent,
          border: "2px solid ".concat(theme.colors.accent)
        },
        '&::after': {
          content: '"âœ“"',
          display: 'block',
          fontFamily: 'monospace',
          position: 'absolute',
          width: 16,
          height: 16,
          lineHeight: '16px',
          top: 1,
          left: 1,
          fontSize: 18,
          textAlign: 'center',
          color: 'white',
          cursor: 'pointer'
        }
      }
    },
    small: {
      fontSize: theme.typography.inputFontSize - 4,
      lineHeight: '18px',
      '& $input': {
        transform: 'translateY(-2px)'
      }
    }
  };
};

exports.checkboxTheme = checkboxTheme;

var _default = (0, _.withFormControl)((0, _reactJss.default)(checkboxTheme)(Checkbox));

exports.default = _default;