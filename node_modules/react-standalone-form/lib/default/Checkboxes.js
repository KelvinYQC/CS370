"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactJss = _interopRequireDefault(require("react-jss"));

var _classnames = _interopRequireDefault(require("classnames"));

var _ = require("../.");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Checkboxes = function Checkboxes(_ref) {
  var name = _ref.name,
      value = _ref.value,
      required = _ref.required,
      setValue = _ref.setValue,
      options = _ref.options,
      small = _ref.small,
      classes = _ref.classes;
  return /*#__PURE__*/_react.default.createElement("div", null, options.map(function (option, index) {
    var optionLabel = typeof option === 'string' ? option : option.label;
    var optionValue = typeof option === 'string' ? option : option.value;
    var checked = value && value.includes(optionValue);
    return /*#__PURE__*/_react.default.createElement("label", {
      className: (0, _classnames.default)(classes.label, 'form-checkitem', _defineProperty({}, classes.small, small)),
      htmlFor: "".concat(name).concat(index),
      key: index
    }, /*#__PURE__*/_react.default.createElement("input", {
      type: "checkbox",
      name: "".concat(name).concat(index),
      className: classes.input,
      id: "".concat(name).concat(index),
      checked: checked,
      onChange: function onChange() {
        var finalValue = (0, _.checkboxHandler)(!checked, optionValue, value);
        setValue(name, finalValue, required);
      }
    }), " ", optionLabel);
  }));
};

Checkboxes.propTypes = {
  name: _propTypes.default.string.isRequired,
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),
  required: _propTypes.default.bool,
  small: _propTypes.default.bool,
  setValue: _propTypes.default.func.isRequired,
  options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
    label: _propTypes.default.node,
    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
  })]))
};

var _default = (0, _.withFormControl)((0, _reactJss.default)(_.checkboxTheme)(Checkboxes));

exports.default = _default;